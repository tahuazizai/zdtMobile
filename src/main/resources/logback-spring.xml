<?xml version="1.0" encoding="UTF-8" ?>

<configuration scan="true" scanPeriod="30 seconds">

  <property name="z_app" value="app"/>

  <property name="ROOT_LEVEL" value="INFO"/>

  <property name="APP_LOG_FILE" value="${ZSMART_HOME}/logs"/>



  <!--控制台日志， 控制台输出 -->
  <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
    <!--此日志appender是为开发使用，只配置最底级别，控制台输出的日志级别是大于或等于此级别的日志信息-->
    <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
      <level>all</level>
    </filter>
    <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
      <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度,%msg：日志消息，%n是换行符-->
      <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>
      <!-- 设置字符集 -->
      <charset>UTF-8</charset>
    </encoder>
  </appender>

  <!--文件日志， 按照每天生成日志文件 -->

  <!-- 时间滚动输出 level为 DEBUG 日志 -->
  <appender name="DEBUG_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
    <file>${APP_LOG_FILE}/debugFile/${z_app}</file>
    <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
      <!--日志文件输出的文件名-->
      <FileNamePattern>${APP_LOG_FILE}/debugFile/${z_app}.%d{yyyy-MM-dd}-%i.log</FileNamePattern>
      <!-- 日志文件最大尺寸 -->
      <maxFileSize>100MB</maxFileSize>
      <!--日志文件保留天数-->
      <MaxHistory>15</MaxHistory>
    </rollingPolicy>
    <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
      <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
      <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>
      <charset>UTF-8</charset>
    </encoder>
    <!-- 此日志文件只记录debug级别的 -->
    <filter class="ch.qos.logback.classic.filter.LevelFilter">
      <level>debug</level>
<!--      <onMatch>ACCEPT</onMatch>-->
<!--      <onMismatch>DENY</onMismatch>-->
    </filter>
  </appender>

  <!-- 时间滚动输出 level为 INFO 日志 -->
  <appender name="INFO_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
    <file>${APP_LOG_FILE}/infoFile/${z_app}</file>
    <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
      <!--日志文件输出的文件名-->
      <FileNamePattern>${APP_LOG_FILE}/infoFile/${z_app}.%d{yyyy-MM-dd}-%i.log</FileNamePattern>
      <!-- 日志文件最大尺寸 -->
      <maxFileSize>100MB</maxFileSize>
      <!--日志文件保留天数-->
      <MaxHistory>15</MaxHistory>
    </rollingPolicy>
    <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
      <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
      <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>
      <charset>UTF-8</charset>
    </encoder>
    <!-- 此日志文件只记录debug级别的 -->
    <filter class="ch.qos.logback.classic.filter.LevelFilter">
      <level>info</level>
      <level>error</level>
      <level>warn</level>
<!--      <onMatch>ACCEPT</onMatch>-->
<!--      <onMismatch>DENY</onMismatch>-->
    </filter>
  </appender>


<!--  &lt;!&ndash; 时间滚动输出 level为 WARN 日志 &ndash;&gt;-->
<!--  <appender name="WARN_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">-->
<!--    <file>${APP_LOG_FILE}/warnFile/${z_app}</file>-->
<!--    <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">-->
<!--      &lt;!&ndash;日志文件输出的文件名&ndash;&gt;-->
<!--      <FileNamePattern>${APP_LOG_FILE}/warnFile/${z_app}.%d{yyyy-MM-dd}-%i.log</FileNamePattern>-->
<!--      &lt;!&ndash; 日志文件最大尺寸 &ndash;&gt;-->
<!--      <maxFileSize>100MB</maxFileSize>-->
<!--      &lt;!&ndash;日志文件保留天数&ndash;&gt;-->
<!--      <MaxHistory>15</MaxHistory>-->
<!--    </rollingPolicy>-->
<!--    <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">-->
<!--      &lt;!&ndash;格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符&ndash;&gt;-->
<!--      <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>-->
<!--      <charset>UTF-8</charset>-->
<!--    </encoder>-->
<!--    &lt;!&ndash; 此日志文件只记录debug级别的 &ndash;&gt;-->
<!--    <filter class="ch.qos.logback.classic.filter.LevelFilter">-->
<!--      <level>warn</level>-->
<!--      <onMatch>ACCEPT</onMatch>-->
<!--      <onMismatch>DENY</onMismatch>-->
<!--    </filter>-->
<!--  </appender>-->

<!--  &lt;!&ndash; 时间滚动输出 level为 ERROR 日志 &ndash;&gt;-->
<!--  <appender name="ERROR_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">-->
<!--    <file>${APP_LOG_FILE}/errorFile/${z_app}</file>-->
<!--    <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">-->
<!--      &lt;!&ndash;日志文件输出的文件名&ndash;&gt;-->
<!--      <FileNamePattern>${APP_LOG_FILE}/errorFile/${z_app}.%d{yyyy-MM-dd}-%i.log</FileNamePattern>-->
<!--      &lt;!&ndash; 日志文件最大尺寸 &ndash;&gt;-->
<!--      <maxFileSize>100MB</maxFileSize>-->
<!--      &lt;!&ndash;日志文件保留天数&ndash;&gt;-->
<!--      <MaxHistory>15</MaxHistory>-->
<!--    </rollingPolicy>-->
<!--    <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">-->
<!--      &lt;!&ndash;格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符&ndash;&gt;-->
<!--      <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>-->
<!--      <charset>UTF-8</charset>-->
<!--    </encoder>-->
<!--    &lt;!&ndash; 此日志文件只记录debug级别的 &ndash;&gt;-->
<!--    <filter class="ch.qos.logback.classic.filter.LevelFilter">-->
<!--      <level>error</level>-->
<!--      <onMatch>ACCEPT</onMatch>-->
<!--      <onMismatch>DENY</onMismatch>-->
<!--    </filter>-->
<!--  </appender>-->

  <root level="${ROOT_LEVEL}">
    <appender-ref ref="DEBUG_FILE" />
    <appender-ref ref="STDOUT" />
    <appender-ref ref="INFO_FILE" />
<!--    <appender-ref ref="WARN_FILE" />-->
<!--    <appender-ref ref="ERROR_FILE" />-->
  </root>

  <!-- 指定项目中某个包，当有日志操作行为时的日志记录级别 -->
  <!-- com.liyan为根包，也就是只要是发生在这个根包下面的所有日志操作行为的权限都是DEBUG -->
  <!-- 级别依次为【从高到低】：FATAL > ERROR > WARN > INFO > DEBUG > TRACE  -->
<!--  <logger name="com.zdt.module" level="info">-->
<!--    <appender-ref ref="STDOUT" />-->
<!--    <appender-ref ref="INFO_FILE" />-->
<!--    <appender-ref ref="WARN_FILE" />-->
<!--    <appender-ref ref="ERROR_FILE" />-->
<!--  </logger>-->

</configuration>
